{"version":3,"sources":["modules/attribute.js","modules/clientside.js","subroutes.js","modules/demo.js","modules/introduction.js","config.js","modules/hello.js","modules/clientsidedownload.js","modules/serverside.js","modules/demo1.js","modules/demo2.js","menu.js","navHeader.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Attribute","Clientside","className","headers","column","displayname","display","data","name","job","department","team","empId","downloadableConfig","download","defaultstyle","pagination","pageSize","pageoption","RouteWithSubRoutes","route","path","render","props","component","routes","Demo","map","i","Introduction","class","style","width","tab","reportOption","Tab","nav","classes","id","activetabname","settabname","index","hasOwnProperty","Fragment","href","data-toggle","aria-expanded","onClick","Menu","activetab","routerConfig","Nav","toggelmenu","status","target","rel","Routes","useState","setActivetab","setActivetabname","useEffect","localStorage","useCallback","console","log","length","routeConfig","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d302817.chunk.js","sourcesContent":["const Attribute = () => (<div>Attribute</div>);\n\nexport default Attribute","import TWTable from \"@twister19/twtable\";\n\nconst Clientside = () => {\n\n    const headers = [{column: \"name\",displayname: \"Name\", display: true},\n                      {column: \"job\",displayname: \"Job\", display: true},\n                      {column: \"department\",displayname: \"Depertment\", display: true},\n                      {column: \"team\",displayname: \"Team Strenth\", display: true},\n                      {column: \"empId\", display:false}];\n\n    const data = [{name:\"Ashish\", job:\"SoftWare Engineer\", department:\"MB\", team:3, empId:1}, \n                    {name:\"Nishant\",job:\"Business\",department:\"Data2C\", team:4, empId:2},\n                    {name:\"Mukesh\",job:\"Banker\",department:\"Data2C\", team:5, empId:3},\n                    {name:\"Shashi\",job:\"Home Maker\",department:\"Data2C\", team:7, empId:4},\n                    {name:\"Kanika\",job:\"Business\",department:\"Data2C\", team:9, empId:5},\n                    {name:\"Kanika1\",job:\"Business\",department:\"Data2C\", team:9, empId:6}];\n\n    return(\n        <div className=\"container\">\n            <div className=\"pb-2 mt-4 mb-2 border-bottom\">\n                <h1>\n                    Client-side Paging\n                </h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <TWTable headers={headers} data={data} downloadableConfig={{download:false}} \n                            defaultstyle={false} pagination={true} pageSize={5} pageoption={[4,5,10,15,20]} />\n                </div>  \n            </div>\n\n            {/* <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <div className=\"pb-2 mt-4 mb-2 border-bottom\">\n                        <h2>\n                            Code\n                        </h2>\n                    </div>\n                    <pre style={{width:\"100%\"}}>\n                        <code>\n                            <p>const headers = &#91;&#123;\"column\":\"name\",\"displayname\":\"Name\",\"display\":true&#125;,&#123;\"column\":\"job\",\"displayname\":\"Job\",\"display\":true&#125;,&#123;\"column\":\"department\",\"displayname\":\"Depertment\",\"display\":true&#125;,&#123;\"column\":\"team\",\"displayname\":\"Team Strenth\",\"display\":true&#125;,&#123;\"column\":\"empId\",\"display\":false&#125;&#93;</p>\n                            <p>const data = {JSON.stringify(data)}</p>\n                            \n                            <p>&lt;TWTable headers=&#123;headers&#125; data=&#123;data&#125; downloadableConfig=&#123;&#123;download:false&#125;&#125; \n                            defaultstyle=&#123;false&#125; pagination=&#123;true&#125; pageSize=&#123;5&#125; pageoption=&#123;&#91;4,5,10,15,20&#93;&#125; /&gt;</p>\n                        </code>\n                    </pre>\n                    \n                </div>  \n            </div> */}\n        </div>\n    );\n};\n\nexport default Clientside","import { Route } from \"react-router-dom\";\n\nfunction RouteWithSubRoutes(route) {\n    return (\n        <Route\n        path={route.path}\n        render={props => (\n            // pass the sub-routes down to keep nesting\n            <route.component {...props} routes={route.routes} />\n        )}\n        />\n    );\n}\n\nexport default RouteWithSubRoutes;","import { Switch } from \"react-router-dom\";\nimport RouteWithSubRoutes from \"../subroutes\";\n\nconst Demo = ({routes}) => (<Switch>\n    {routes.map((route, i) => (\n      <RouteWithSubRoutes key={i} {...route} />\n    ))}\n  </Switch>);\n\nexport default Demo;","const Introduction = () => (\n<div className=\"container\">\n    <div class=\"pb-2 mt-4 mb-2 border-bottom\">\n        <h1>\n            Introduction\n        </h1>\n    </div>\n\n    <div className=\"row\">\n        <div className=\"col-sm-12\">\n            <p>Twtable is a light weight reactjs module for Table UI.</p>\n            <p>USP for Twtable module\n                <ul>\n                    <li>Light weight</li>\n                    <li>Client-side paging</li>\n                    <li>Server-side paging</li>\n                    <li>CSV and excel download options</li>\n                </ul>\n            </p>\n        </div>\n    </div>\n\n    <div className=\"row\">\n        <div className=\"col-sm-12\">\n            <div class=\"pb-2 mt-4 mb-2 border-bottom\">\n                <h2>\n                    Twtable Attributes\n                </h2>\n            </div>\n\n            <table className=\"table table-bordered\">\n                <tr>\n                    <th style={{width:\"20%\"}}>Attribute</th>\n                    <th style={{width:\"10%\"}}>Require</th>\n                    <th style={{width:\"60%\"}}>Description</th>\n                    <th style={{width:\"10%\"}}>Version Support</th>\n                </tr>\n                <tr>\n                    <td><p>headers</p></td>\n                    <td><p>true</p></td>\n                    <td><p>Json, As described in above point</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>data</p></td>\n                    <td><p>true</p></td>\n                    <td><p>Json OR Function, JSON for client-side pagination and Function for Server-side pagination</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>pagination</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Boolean, defualt value false. True for adding pagination in table</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>filter</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Boolean, defualt value false. True for adding serach box in table.</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>serversidePagination</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Boolean, if true table will fetch data from API</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>defaultstyle</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Boolean, Default value true. If false twtable will include default css</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>heading</p></td>\n                    <td><p>false</p></td>\n                    <td><p>String, Table heading</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>pageoption</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Array, array of number</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>pageSize</p></td>\n                    <td><p>false</p></td>\n                    <td><p>Number, default value is 10. This attribute defines size of the each page in case of pagination.</p></td>\n                    <td><p>1.5.4 +</p></td>\n                </tr>\n                <tr>\n                    <td><p>downloadableConfig</p></td>\n                    <td><p>false</p></td>\n                    <td>\n                        <p>JSON, three optional attributes</p>\n                        <table>\n                            <tr>\n                                <th style={{width:\"30%\"}}>Attribute</th>\n                                <th style={{width:\"70%\"}}>Description</th>\n                            </tr>\n                            <tr>\n                                <td><p>download</p></td>\n                                <td><p>Boolean, Default is True. If false, Download option will be off.</p></td>\n                            </tr>\n                            <tr>\n                                <td><p>reportfn</p></td>\n                                <td><p>String OR Function, Defualt value 'twtable' then twtable will handle download options. If function, the function will be called on download option click.</p></td>\n                            </tr>\n                            <tr>\n                                <td><p>reportOption</p></td>\n                                <td><p>Array, Array of type of report you want to have download options. Defulat value is ['csv', 'excel'] (only these two type of report handled by twtable. User can have more options. But with 'reportfn' attribute as function.).</p></td>\n                            </tr>\n                        </table>\n                    </td>\n                    <td><p>1.6.0 +</p></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n);\n\nexport default Introduction;","//const {Introduction, Version, Attribute, Serverside, Clientside, Demo1, Demo2, Demo} =  require(\"./modules/attribute\");\n\nimport Attribute from \"./modules/attribute\";\nimport Clientside from \"./modules/clientside\";\nimport Demo from \"./modules/demo\";\nimport Demo1 from \"./modules/demo1\";\nimport Demo2 from \"./modules/demo2\";\nimport Introduction from \"./modules/introduction\";\nimport Serverside from \"./modules/serverside\";\nimport Clientsidedownload from \"./modules/clientsidedownload\";\nimport Hello from \"./modules/hello\";\n\nconst routes = [\n    {\n      path: \"/introduction\",\n      component: Introduction,\n      tab: \"Introduction\"\n    },{\n      path: \"/hello-world\",\n      component: Hello,\n      tab: \"Hello World Twtable\"\n    },{\n      path: \"/clientside\",\n      component: Clientside,\n      tab: \"Client-side Paging\"\n    },{\n      path: \"/clientside-download\",\n      component: Clientsidedownload,\n      tab: \"Client-side Paging (download)\"\n    },{\n      path: \"/attribute\",\n      component: Attribute,\n      tab: \"Attribute\"\n    },{\n      path: \"/pagination\",\n      component: Demo,\n      tab: \"pagination\",\n      routes:[{\n            path: \"/pagination/serverside\",\n            component: Serverside,\n            tab: \"Server-side Paging\"\n          },{\n            path: \"/pagination/clientside\",\n            component: Clientside,\n            tab: \"Client-side Paging\"\n          }]\n        },{\n      path: \"/demo\",\n      component: Demo,\n      tab: \"Demo\",\n      routes: [{\n          path: \"/demo/Demo1\",\n          component: Demo1,\n          tab: \"Demo1\"\n        },{\n          path: \"/demo/Demo2\",\n          component: Demo2,\n          tab: \"Demo2\"\n        }]\n    },{\n      path: \"*\",\n      component: Introduction\n    }\n  ];\n\nexport default routes;","import TWTable from \"@twister19/twtable\";\n\nconst Hello = () => {\n\n    const headers = [{column: \"name\",displayname: \"Name\", display: true},\n                      {column: \"job\",displayname: \"Job\", display: true},\n                      {column: \"department\",displayname: \"Depertment\", display: true},\n                      {column: \"team\",displayname: \"Team Strenth\", display: true},\n                      {column: \"empId\", display:false}];\n\n    const data = [{name:\"Ashish\", job:\"SoftWare Engineer\", department:\"MB\", team:3, empId:1}, \n                    {name:\"Nishant\",job:\"Business\",department:\"Data2C\", team:4, empId:2},\n                    {name:\"Mukesh\",job:\"Banker\",department:\"Data2C\", team:5, empId:3},\n                    {name:\"Shashi\",job:\"Home Maker\",department:\"Data2C\", team:7, empId:4},\n                    {name:\"Kanika\",job:\"Business\",department:\"Data2C\", team:9, empId:5},\n                    {name:\"Kanika1\",job:\"Business\",department:\"Data2C\", team:9, empId:6}];\n\n    return(\n        <div className=\"container\">\n            <div className=\"pb-2 mt-4 mb-2 border-bottom\">\n                <h1>\n                    Hello Wrold Twtable\n                </h1>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <TWTable headers={headers} data={data} downloadableConfig={{download:false}} \n                            defaultstyle={false}/>\n                </div>  \n            </div>\n        </div>\n    );\n};\n\nexport default Hello","import TWTable from \"@twister19/twtable\";\n\nconst clientsidedownload = () => {\n\n    const headers = [{column: \"name\",displayname: \"Name\", display: true},\n                      {column: \"job\",displayname: \"Job\", display: true},\n                      {column: \"department\",displayname: \"Depertment\", display: true},\n                      {column: \"team\",displayname: \"Team Strenth\", display: true},\n                      {column: \"empId\", display:false}];\n\n    const data = [{name:\"Ashish\", job:\"SoftWare Engineer\", department:\"MB\", team:3, empId:1}, \n                    {name:\"Nishant\",job:\"Business\",department:\"Data2C\", team:4, empId:2},\n                    {name:\"Mukesh\",job:\"Banker\",department:\"Data2C\", team:5, empId:3},\n                    {name:\"Shashi\",job:\"Home Maker\",department:\"Data2C\", team:7, empId:4},\n                    {name:\"Kanika\",job:\"Business\",department:\"Data2C\", team:9, empId:5},\n                    {name:\"Kanika1\",job:\"Business\",department:\"Data2C\", team:9, empId:6}];\n\n    return(\n        <div className=\"container\">\n            <div className=\"pb-2 mt-4 mb-2 border-bottom\">\n                <h1>\n                    Client-side Paging\n                </h1>\n            </div>\n\n            <div className=\"row\">\n                <h3>Twtable show both CSV and Excel option by default</h3>\n                <div className=\"col-sm-12\">\n                    <TWTable headers={headers} data={data} downloadableConfig={{download:true}} \n                            defaultstyle={false} pagination={true} pageSize={5} pageoption={[4,5,10,15,20]} />\n                </div>  \n            </div>\n            <hr></hr>\n            <div className=\"row\">\n            <h3>If \"reportOption\" array has only CSV report</h3>\n                <div className=\"col-sm-12\">\n                    <TWTable headers={headers} data={data} downloadableConfig={{download:true, reportOption:[\"CSV\"]}} \n                            defaultstyle={false} pagination={true} pageSize={5} pageoption={[4,5,10,15,20]} />\n                </div>  \n            </div>\n            {/* <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <div className=\"pb-2 mt-4 mb-2 border-bottom\">\n                        <h2>\n                            Code\n                        </h2>\n                    </div>\n                    <pre style={{width:\"100%\"}}>\n                        <code>\n                            <p>const headers = &#91;&#123;\"column\":\"name\",\"displayname\":\"Name\",\"display\":true&#125;,&#123;\"column\":\"job\",\"displayname\":\"Job\",\"display\":true&#125;,&#123;\"column\":\"department\",\"displayname\":\"Depertment\",\"display\":true&#125;,&#123;\"column\":\"team\",\"displayname\":\"Team Strenth\",\"display\":true&#125;,&#123;\"column\":\"empId\",\"display\":false&#125;&#93;</p>\n                            <p>const data = {JSON.stringify(data)}</p>\n                            \n                            <p>&lt;TWTable headers=&#123;headers&#125; data=&#123;data&#125; downloadableConfig=&#123;&#123;download:false&#125;&#125; \n                            defaultstyle=&#123;false&#125; pagination=&#123;true&#125; pageSize=&#123;5&#125; pageoption=&#123;&#91;4,5,10,15,20&#93;&#125; /&gt;</p>\n                        </code>\n                    </pre>\n                    \n                </div>  \n            </div> */}\n        </div>\n    );\n};\n\nexport default clientsidedownload","const Serverside = () => (<div>Serverside</div>);\n\nexport default Serverside;","const Demo1 = () => (<div>Demo1</div>);\n\nexport default Demo1;","const Demo2 = () => (<div>Demo2</div>);\n\nexport default Demo2;","import React from \"react\";\nimport routerConfig from \"./config\";\n\nconst Tab = ({nav, classes, id, activetabname, settabname}) => (\n    <ul className={classes} id={id}>\n        {nav.map((route, index) => \n            (<li key={index}>\n                \n                {route.hasOwnProperty('routes')? \n                    <React.Fragment>\n                        <a href={`#tab-${index}`} data-toggle=\"collapse\" aria-expanded={activetabname === route.tab?true:false} \n                        className=\"dropdown-toggle\" onClick={() => settabname(route.tab)}>{route.tab}</a>\n                        <Tab nav={route.routes} classes=\"collapse list-unstyled\" id={`tab-${index}`} settabname={settabname}/>\n                    </React.Fragment>:\n                    <a onClick={() => settabname(route.tab)} href={`#${route.path}`} aria-expanded={activetabname === route.tab?true:false} >{route.tab}</a> }\n            </li>))}\n    </ul>\n)\n\nconst Menu = ({activetab, settabname}) => {\n\n    return(<nav id=\"sidebar\" className={activetab}>\n        <div className=\"sidebar-header\">\n            <h3>Twtable</h3>\n        </div>\n\n        <Tab nav={routerConfig} classes=\"list-unstyled components\" settabname={settabname}/>\n    </nav>);\n}\n\nexport default Menu;","const Nav = ({toggelmenu, status}) => (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n\n        <div className=\"burger-container\" onClick={() => toggelmenu(status)}>\n            <div className=\"bar1\"></div>\n            <div className=\"bar2\"></div>\n            <div className=\"bar3\"></div>\n        </div>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"nav navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.npmjs.com/package/@twister19/twtable\">Click Here for Twtable npm package</a>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default Nav;","import { useCallback, useEffect, useState } from \"react\";\nimport {\n    HashRouter as Router,\n    Switch\n  } from \"react-router-dom\";\n\nimport routeConfig from \"./config\";\nimport Menu from \"./menu\";\nimport Nav from \"./navHeader\";\nimport RouteWithSubRoutes from \"./subroutes\";\n\nfunction Routes() {\n    const [activetab, setActivetab] = useState(\"\");\n    const [activetabname, setActivetabname] = useState(\"\");\n\n    const toggelmenu = (status) => {\n        setActivetab(status);\n    };\n\n    useEffect(() => {\n      setActivetabname(localStorage.tab);\n    },[]);\n\n    const settabname = useCallback((tab) => {\n        console.log(\"tab\", tab);\n        setActivetabname(tab);\n        localStorage.tab = tab;\n    },[]);\n\n    return (\n        \n            <div className=\"wrapper\">\n                <Menu activetab={activetab} activetabname={activetabname} settabname={settabname}/>\n\n                <div id=\"content\">\n                    <Nav toggelmenu={toggelmenu} status={activetab.length?\"\":\"active\"}/>\n                    <Router>\n                      <Switch>\n                        {routeConfig.map((route, i) => (\n                            route.hasOwnProperty('component')?<RouteWithSubRoutes key={i} {...route} />:null\n                        ))}\n                      </Switch>\n                    </Router>\n                </div>\n                \n            </div>\n    );\n}\n\nexport default Routes;","import Routes from \"./routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}